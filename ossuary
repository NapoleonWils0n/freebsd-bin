#!/usr/local/bin/bash

# geli container mount and umount script
#=======================================

# check to see if script was run as root
if [[ $UID -ne 0 ]]; then
  printf "%s\n" "$0 must be run as root using sudo, make your own sandwich"
  exit 1
fi

# check number of arguments
[[ $# -eq 0 ]] || exit

# Create the prompt
PS3="Enter your choice: "
options=("mount" "umount" "quit")
OLD_IFS=${IFS}; #ifs space seperator
IFS=$'\t\n' #change ifs seperator from spaces to new line

# container
container="/usr/home/djwilcox/documents/disk.img"
# geli key
gelikey="/usr/home/djwilcox/.ossuary/ossuary.key"

# mdconfig device - remove white space from end of command with sed
loopdevice=$(mdconfig -lf "$container" | sed 's/[ \t]*$//')
# geli device
loopcrypt="/dev/${loopdevice}.eli"

# select and case statement
select opt in "${options[@]}"; do
case $opt in
  mount)
      { printf "%s\n" "+ mdconfig creating vnode for '$container'" && \
        loop=$(mdconfig -a -t vnode -f "$container") && \
        printf "%s\n" "+ geli attaching '$gelikey' key to '$container' file" && \
        geli attach -k "$gelikey" "$loop" && \
        loopdevice=$(mdconfig -lf "$container" | sed 's/[ \t]*$//') && \
        loopcrypt="/dev/${loopdevice}.eli" && \
        poolname=$(zdb -l "$loopcrypt" | awk -F\' '/[[:blank:]]name/ {print $2; exit;}') && \
        printf "%s\n" "+ zpool importing '$poolname'" && \
        zpool import "$poolname" && \
        mountpoint=$(zfs get -H -o value mountpoint "$poolname") && \
        printf "%s\n" "+ '$poolname' mounted to '$mountpoint'"; } || { mdconfig -du "$loopdevice" && break; }
        break;;
  umount)
      { poolname=$(zdb -l "$loopcrypt" | awk -F\' '/[[:blank:]]name/ {print $2; exit;}') && \
        printf "%s\n" "- zfs unmounting '$poolname'" && \
        zfs umount "$poolname" && \
        printf "%s\n" "- zpool exporting '$poolname'" && \
        zpool export "$poolname" && \
        sleep 1 && \
        printf "%s\n" "- geli detaching '$loopcrypt'" && \
        geli detach "$loopcrypt" && \
        printf "%s\n" "- mdconfig clearing '$loopdevice'" && \
        mdconfig -du "$loopdevice" && \
        printf "%s\n" "- unmounted device"; } || { printf "%s\n" 'container not mounted' && break; }
	break;;
  quit) 
	echo "Quitting"
	IFS=${OLD_IFS}
	break;;
  *)    echo "Usage: ossuary [ mount | umount | quit ]";;
esac
done
